version: "3"
services:
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    restart: always
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT:-9200}:9200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail -u elastic:${ELASTIC_PASSWORD:-changeme} localhost:9200/_cluster/health || exit 1",
        ]
      interval: 30s
      timeout: 30s
      retries: 3

  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    environment:
      - KIBANA_PASSWORD=${KIBANA_PASSWORD:-changeme}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    command: >
      bash -c '
        echo "Waiting for Elasticsearch availability";j
        until curl -s http://es:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST -u "elastic:${ELASTIC_PASSWORD:-changeme}" -H "Content-Type: application/json" http://es:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD:-changeme}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    depends_on:
      es:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    restart: always
    ports:
      - ${KIBANA_PORT:-5601}:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://es:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD:-changeme}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail -u elastic:${ELASTIC_PASSWORD:-changeme} http://localhost:5601/",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      es:
        condition: service_healthy
      setup:
        condition: service_completed_successfully

  redis:
    image: "redis/redis-stack:6.2.6-v7"
    restart: always
    ports:
      - ${REDIS_PORT:-6379}:6379
      - ${REDIS_INSIGHT_PORT:-8001}:8001
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis-data:/data

  worker:
    build:
      context: ./
      dockerfile: Dockerfile
    command: arq mihama.arq.worker.ArqWorkerSettings
    environment:
      - REDIS_URL=redis://redis:${REDIS_PORT:-6379}
      - ES_HOSTS=http://es:9200
      - ES_PASSOWRD=${ES_PASSOWRD:-changeme}
    restart: always
    depends_on:
      es:
        condition: service_healthy
      redis:
        condition: service_healthy

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    command: gunicorn -k uvicorn.workers.UvicornWorker mihama.main:app
    ports:
      - ${PORT:-8000}:${PORT:-8000}
    environment:
      - REDIS_URL=redis://redis:${REDIS_PORT:-6379}
      - ES_HOSTS=http://es:9200
      - ES_PASSOWRD=${ES_PASSOWRD:-changeme}
    restart: always
    depends_on:
      es:
        condition: service_healthy

volumes:
  redis-data:
  es-data:
