[tool.poetry]
name = "mihama"
version = "0.7.0"
description = "osv.dev API clone for on-premise usage"
authors = ["Manabu Niseki <manabu.niseki@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
aiometer = "^0.4"
arq = "^0.25"
fastapi = "^0.103"
gitpython = "^3.1.37"
gunicorn = "^21.2"
loguru = "^0.7"
orjson = "^3.9"
packageurl-python = "^0.11"
purl = "^1.6"
pydantic = "1.10.13"
pyhumps = "^3.8"
redis = "^4.0"
redis-om = "^0.2"
requests = "2.31"
returns = "^0.22"
semver = "^3.0"
typer = "^0.9"
uvicorn = { extras = ["standard"], version = "^0.23" }

[tool.poetry.group.dev.dependencies]
black = "^23.3"
ci-py = "^1.0.0"
httpx = "^0.26.0"
mypy = "^1.5"
nest-asyncio = "^1.5"
pre-commit = "^3.4"
pytest = "^7.4"
pytest-asyncio = "^0.21"
pytest-cov = "^4.1"
pytest-docker = "^2.0.1"
pytest-mock = "^3.11"
pytest-randomly = "^3.15"
types-requests = "2.31"
vcrpy = "^5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.poetry.scripts]
mihama = "mihama.cli:app"

[tool.mypy]
plugins = ["pydantic.mypy", "returns.contrib.mypy.returns_plugin"]
ignore_missing_imports = true

[tool.ruff]
select = [
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C",     # flake8-comprehensions
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "SIM",   # flake8-simplify
    "T20",   # flake8-print
    "W",     # pycodestyle warnings
]
ignore = [
    "E501", # line too long, handled by black
]
