import pytest

from app import crud, models, schemas


@pytest.mark.usefixtures("setup_redis")
@pytest.mark.asyncio
async def test_get_by_id(vulnerabilities: list[models.Vulnerability]):
    for v in vulnerabilities:
        assert await crud.vulnerability.get_by_id(v.id) is not None


@pytest.fixture
def purls(vulnerabilities: list[models.Vulnerability]):
    purls: set[str] = set()
    for v in vulnerabilities:
        for a in v.affected:
            if a.package.purl is not None:
                purls.add(a.package.purl)

    return purls


@pytest.mark.usefixtures("setup_redis")
@pytest.mark.asyncio
async def test_search_by_package_purl(purls: set[str]):
    for purl in purls:
        vulnerabilities = await crud.vulnerability.search_by_package(
            schemas.Package(purl=purl)
        )
        assert len(vulnerabilities) > 0


@pytest.fixture
def package_names(vulnerabilities: list[models.Vulnerability]):
    names: set[str] = set()
    for v in vulnerabilities:
        for a in v.affected:
            if a.package.name is not None:
                names.add(a.package.name)

    return names


@pytest.mark.usefixtures("setup_redis")
@pytest.mark.asyncio
async def test_search_by_package_name(package_names: set[str]):
    for name in package_names:
        vulnerabilities = await crud.vulnerability.search_by_package(
            schemas.Package(name=name)
        )
        assert len(vulnerabilities) > 0
