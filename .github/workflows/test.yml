name: Python CI

on: ["pull_request", "push"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: "redis/redis-stack:6.2.4-v2"
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: [1.2.1]

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get -yqq install build-essential

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install Python dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: Run tests
        env:
          REDIS_OM_URL: redis://localhost:6379
          REDIS_CACHE_URL: redis://localhost:6379
          ARQ_REDIS_URL: redis://localhost:6379
        run: poetry run pytest
